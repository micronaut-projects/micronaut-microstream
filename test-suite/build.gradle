plugins {
    id 'java-library'
}
repositories {
    mavenCentral()
}
dependencies {
    testAnnotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testAnnotationProcessor(project(":microstream-annotations"))
    testAnnotationProcessor(mn.micronaut.inject.java)
    testAnnotationProcessor(mn.micronaut.validation)
    testAnnotationProcessor(mn.micronaut.serde.processor)

    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation(mn.micronaut.validation)
    testImplementation(mn.micronaut.serde.jackson)

    testImplementation(project(":microstream-annotations"))

    testImplementation(libs.jupiter.api)
    testImplementation(mn.micronaut.test.junit5)
    testRuntimeOnly(libs.junit.jupiter.engine)

    testRuntimeOnly(libs.logback.classic)
    testImplementation(mn.micronaut.http.server.netty)
    testImplementation(mn.micronaut.http.client)
    testImplementation project(":microstream")
    testImplementation project(":microstream-cache")
    testImplementation project(":microstream-rest")
    testImplementation(libs.jupiter.jupiter.params)
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:${mn.versions.micronaut.serialization.get()}"))
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}
